{"version":3,"sources":["assets/images/user-logo.png","redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/Spinner-1.3s-200px.svg","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/helpers/object-helper.js","redux/users-reducer.js","components/common/Paginators/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormControls/FormControls.js","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/common/Preloader/Preloader.js","components/common/Paginators/Paginator.module.css","components/Header/Header.module.css","hoc/withAuthRedirect.js","redux/profile-reducer.js"],"names":["module","exports","initialState","messages","id","message","dialogs","name","userPhoto","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","instance","axios","baseURL","withCredentials","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileApi","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","event","key","User","user","src","photos","small","userLogo","alt","usersPhoto","disabled","some","Users","props","getUsersReselector","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","withAuthRedirect","Header","header","headerContainer","loginBlock","isAuth","SET_AUTH_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","errorMsg","length","stopSubmit","_error","formData","initialised","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialiseApp","path","render","AppContainer","withRouter","MainApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","value","maxLength","max","undefined","minLength","min","preloader","mapStateToPropsForRedirect","RedirectComponent","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getUserStatus","newPost","postId"],"mappings":"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","file":"static/js/main.a62fae6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-logo.f07d66e0.png\";","\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n  messages: [\n    {id: 1, message: 'how do you do'},\n    {id: 2, message: 'z.dkbyu.dkytbzd.jk'},\n    {id: 3, message: 'hello'},\n    {id: 4, message: 'zdbyxdybny'},\n    {id: 5, message: 'ma name is mary'},\n    {id: 6, message: 'hi'}\n  ],\n  dialogs: [\n    {id: 1, name: 'John', userPhoto: 'https://emm.wipro-unza.com/image/userphoto/userphoto.png'},\n    {id: 2, name: 'Mark', userPhoto: 'https://d-jones.ru/image/otzivimg.png'},\n    {id: 3, name: 'Joe', userPhoto: 'https://image.flaticon.com/icons/png/512/86/86072.png'},\n    {id: 4, name: 'Mary', userPhoto: 'https://image.flaticon.com/icons/png/512/89/89827.png'},\n    {id: 5, name: 'Kate', userPhoto: 'https://image.flaticon.com/icons/png/512/950/950050.png'},\n    {\n      id: 6,\n      name: 'Lessy',\n      userPhoto: 'https://currofacil.com/imagenes_de_empleos/2019/06/334-3349155_cashier-vector-icono-de-cajera.png'\n    }\n  ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE: {\n      let newMessage = {\n        id: 8,\n        message: action.newMessageBody\n      };\n      return  {\n        ...state,\n        messages: [...state.messages, newMessage]\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\n\n\nexport default dialogsReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__3osYH\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1.3s-200px.5088b636.svg\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"f5f2be0c-0ce5-4346-aac3-376cc05523a0\"\n  }\n});\n\nexport const usersApi = {\n  getUsers(currentPage, pageSize) {\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n  },\n  follow(userId) {\n    return instance.post(`follow/${userId}`);\n  },\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`);\n  },\n  getProfile(userId) {\n    console.warn('Use old method from profileApi');\n    return profileApi.getProfile(userId);\n  }\n};\nexport const profileApi = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateStatus(status) {\n    return instance.put(`profile/status/`, {status: status});\n  }\n};\n\nexport const authApi = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email, password,rememberMe) {\n    return instance.post(`auth/login`, {email, password,rememberMe });\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      // eslint-disable-next-line no-undef\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Profile is cached for offline use.\" message.\n              console.log('Profile is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className={s.nav}>\n      <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink></div>\n      <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink></div>\n      <div className={s.item}><NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink></div>\n      <div className={s.item}><NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink></div>\n      <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink></div>\n      <div className={s.item}><NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink></div>\n    </nav>\n  )\n};\n\nexport default Navbar;\n","\nexport const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\n    return items.map(u => {\n        if (u[objPropName] === itemsId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n};\n","import {usersApi} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/helpers/object-helper\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed: true})\n            };\n        }\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id',{followed: false})\n            };\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_USERS_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setUsersTotalCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, totalCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n});\n\n//thunks\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => { // thunk (function)\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n        let data = await usersApi.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setUsersTotalCount(data.totalCount));\n    }\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleIsFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {\n    return async  (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess);\n    }\n};\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess);\n    }\n};\n\nexport default usersReducer;\n","import React, {useState} from 'react';\nimport s from '../../common/Paginators/Paginator.module.css';\nimport cn from 'classnames';\n\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return (\n        <div className={s.paginator}>\n            {portionNumber > 1 &&\n            <button onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>Prev</button>}\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => {\n                    return <span className={cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\n                                 onClick={(event) => {\n                                     onPageChanged(p);\n                                 }}\n                                 key={p}>{p}</span>\n                })}\n            {portionCount > portionNumber &&\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>Next</button>\n            }\n        </div>\n    )\n};\n\nexport default Paginator;\n","import React from 'react';\nimport s from './Users.module.css';\nimport userLogo from '../../assets/images/user-logo.png'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst User = ({user, followingInProgress, follow, unfollow}) => {\n    return (\n        <div>\n          <span>\n            <div>\n              <NavLink to={'/profile/' + user.id}>\n                 <img src={user.photos.small != null ? user.photos.small : userLogo} alt=\"user-img\" className={s.usersPhoto}/>\n              </NavLink>\n\n            </div>\n            <div>\n              {\n                  user.followed\n                      ? <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    unfollow(user.id)\n                                }}>Unfollow</button>\n                      : <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    follow(user.id)\n                                }}>Follow</button>\n              }\n            </div>\n          </span>\n            <span>\n            <span>\n              <div>{user.name}</div>\n              <div>{user.status}</div>\n              </span>\n            <span>\n              <div>\"u.location.city\"</div>\n              <div>\"u.location.country\"</div>\n              </span>\n          </span>\n        </div>\n    )\n};\n\nexport default User;\n","import React from 'react';\nimport Paginator from \"../common/Paginators/Paginator\";\nimport User from \"./User\";\n\n\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount}\n                   pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User key={u.id}\n                                     user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}/>\n                )\n            }\n        </div>\n\n    </div>\n};\n\nexport default Users;\n","import {createSelector} from \"reselect\";\n\nconst getUsers = (state) => {\n    return state.usersPage.users;\n};\n\n// reselect example\nexport const getUsersReselector = createSelector (getUsers,\n    (users) => {\n    return users.filter( u => true)\n    });\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n};\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n};\n\n\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {follow, requestUsers, setCurrentPage, toggleIsFollowingProgress, unfollow} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersReselector\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize);\n    };\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   unfollow={this.props.unfollow}\n                   follow={this.props.follow}\n                   followingInProgress={this.props.followingInProgress}\n                   toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsersReselector(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleIsFollowingProgress, requestUsers}),\n    withAuthRedirect\n)(UsersContainer)\n\n","import React from \"react\";\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n  return (\n    <header className={s.header}>\n      <div className={s.headerContainer}>\n        <img src=\"https://www.freeiconspng.com/uploads/free-apple-icon-png-13.png\"\n             alt=\"logo\"/>\n        <div className={s.loginBlock}>\n          {props.isAuth\n              ? <div>{props.login} - <button onClick={props.logout}>Logout</button> </div>\n              : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n      </div>\n    </header>\n  )\n};\n\nexport default Header;\n","import {authApi} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH_USER_DATA = 'me-react-app/auth/SET_AUTH_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n};\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_AUTH_USER_DATA,\n    payload: {userId, email, login, isAuth}\n});\n\n//thunks\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authApi.me();\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authApi.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let errorMsg = response.data.messages.length > 0 ? response.data.messages[0] : \"Some another warning\" +\n            \" message\";\n        dispatch(stopSubmit(\"login\", {_error: errorMsg}));\n    }\n};\n\nexport const logout = () => async (dispatch) => {\n    let response = await authApi.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n};\n\nexport default authReducer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n  render() {\n    return <Header {...this.props}/>\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {required} from \"../../utils/validators/validators\";\nimport s from './../common/FormControls/FormControls.module.css'\nimport {createField, Input} from \"../common/FormControls/FormControls\";\n\nconst LoginForm = ({handleSubmit, error}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n        {createField(\"Email\", \"email\", [required], Input)}\n        {createField(\"Password\", \"password\", [required], Input, {type:\"password\"})}\n        {createField(null, \"rememberMe\", [], Input, {type:\"checkbox\"}, \"Remember me\")}\n\n        {error && <div className={s.formSummaryError}>{error}</div>}\n      <div>\n          <button>login</button>\n      </div>\n    </form>\n)\n};\n\nconst LoginReduxForm = reduxForm({\n  // a unique name for the form\n  form: 'login'\n})(LoginForm);\n\nconst Login = (props) => {\n  const onSubmit = (formData) => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if(props.isAuth) {\n      return <Redirect to={\"/profile\"} />\n  }\n  return <div>\n  <h1>Login</h1>\n   <LoginReduxForm onSubmit={onSubmit}/>\n  </div>\n};\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n","import {getAuthUserData} from \"./auth-reducer\";\n\nconst SET_INITIALISED = 'SET_INITIALISED';\n\n\nlet initialState = {\n    initialised: false,\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALISED: {\n            return {\n                ...state,\n                initialised: true\n            }\n        }\n        default:\n            return state;\n    }\n};\n\n\nexport const initialisedSuccess = () => ({type: SET_INITIALISED});\n\n//thunks\n\nexport const initialiseApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    promise.then(() => {\n        dispatch(initialisedSuccess());\n    })\n};\n\nexport default appReducer;\n","let initialState = {};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n  return state;\n};\n\nexport default sidebarReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport profileReducer from './profile-reducer';\nimport dialogsReducer from './dialogs-reducer';\nimport sidebarReducer from './sidebar-reducer';\nimport usersReducer from './users-reducer';\nimport authReducer from './auth-reducer';\nimport thunkMiddleware from 'redux-thunk'\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers(\n    {\n        profilePage: profileReducer,\n        dialogsPage: dialogsReducer,\n        sidebar: sidebarReducer,\n        usersPage: usersReducer,\n        auth: authReducer,\n        form: formReducer,\n        app: appReducer\n    }\n);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)\n));\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.__store__ = store;\n\nexport default store;\n","import React from 'react';\n\n\nexport const withSuspense = (Component) => {\n\n    return (props) => {\n        return <React.Suspense fallback={<div>Loading...</div>}>\n            <Component {...props}/>\n        </React.Suspense>\n    }\n};\n\n","import React, {Component} from 'react';\nimport {HashRouter, Route, withRouter} from 'react-router-dom';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialiseApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initialiseApp();\n    }\n\n    render() {\n        if (!this.props.initialised) {\n            return <Preloader/>;\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/dialogs\"\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path=\"/profile/:userId?\"\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path=\"/users\"\n                           render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\"\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialised: state.app.initialised\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initialiseApp})\n)(App);\n\nconst MainApp = (props) => {\n    return <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\nexport default MainApp;\n\n","import React from 'react'\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./App\";\nimport './index.css'\n\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport s from './FormControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validators/validators\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n};\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n};\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n};\n\nexport const createField = (placeholder, name, validators, component, props, text) => {\n    return (\n        <div>\n            <Field placeholder={placeholder} type={\"email\"} name={name}\n                   validate={validators}\n                   component={component}\n                   {...props}\n            />{text}\n        </div>\n    );\n};\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2axsW\",\"error\":\"FormControls_error__24y5C\",\"formSummaryError\":\"FormControls_formSummaryError__kXbFS\"};","export const required = (value) => {\n  if (value) return undefined;\n  return \"fields are required\"\n};\n\nexport const maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\n\nexport  const minLength = min => value =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\n\n","import preloader from \"../../../assets/images/Spinner-1.3s-200px.svg\";\nimport React from \"react\";\n\nconst Preloader = (props) => {\n  return <div><img src={preloader} alt=\"img-fetching\"/></div>\n};\n\nexport default Preloader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__32hmk\",\"pageNumber\":\"Paginator_pageNumber__NAgVS\",\"selectedPage\":\"Paginator_selectedPage__30ykz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"headerContainer\":\"Header_headerContainer__1YLYN\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\n      return <Component {...this.props}/>\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n\n  return ConnectedAuthRedirectComponent;\n};\n\n","import {profileApi, usersApi} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\n\nlet initialState = {\n  posts: [\n    {id: 1, post: 'Hi, how are you?', likesCount: 15},\n    {id: 2, post: 'Hi, i\\'m well', likesCount: 20},\n    {id: 3, post: 'Hi, how', likesCount: 35}\n  ],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = {\n        id: 4,\n        post: action.newPostText,\n        likesCount: 0\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost]\n      };\n    }\n    case DELETE_POST: {\n      return  {\n        ...state,\n        posts: state.posts.filter(p => p.id !== action.postId)\n      }\n\n    }\n    case SET_STATUS: {\n      return {\n        ...state,\n        status: action.status\n      };\n    }\n    case SET_USER_PROFILE: {\n      return {\n        ...state,\n        profile: action.profile\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\n//thunks\nexport const getUserProfile = (userId) => async (dispatch) => {\n  let response = await usersApi.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getUserStatus = (userId) => async (dispatch) => {\n  let response = await profileApi.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n  let response =await profileApi.updateStatus(status);\n        if(response.data.resultCode === 0 ) {\n          dispatch(setStatus(status));\n        }\n};\n\nexport default profileReducer;\n"],"sourceRoot":""}